import pyb, array, time
from pyb import I2C
from array import array

pinC0 = pyb.Pin('ENABLE_LDO4', pyb.Pin.PULL_UP)
pinC0.high()
pinB5 = pyb.Pin('PB5', pyb.Pin.PULL_UP)
pinB5.high()
i2c = I2C(1, I2C.MASTER) #init i2c

currentLimit = array('B', [0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01])
logDimm = array('B', [0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20])
dataPage0 = array('B', [0x00, 0x9F, 0x90, 0x10, 0x23, 0x07, 0x23, 0x3C, 0x00, 0x9D, 0x80, 0x0D, 0x0F, 0x02, 0x64, 0x03, 0x78, 0x04, 0x23, 0x3C, 0x00, 0x9D, 0x80, 0x08, 0x27, 0x05, 0x27, 0x6E, 0x00])
dataPage1 = array('B', [0x01, 0x01, 0x00, 0x00, 0x80, 0x00, 0x40])
i2c.mem_write(0xFF, 0x34, 0x3D) #reset board
i2c.mem_write(0x40, 0x34, 0x00) #enable
i2c.mem_write(0x10, 0x34, 0x01) #load
i2c.mem_write(0x5B, 0x34, 0x36) #auto increment, cp auto, internal clock
i2c.mem_write(currentLimit[:], 0x34, 0x26) #current limit 0.1mA
i2c.mem_write(logDimm[:], 0x34, 0x06)
time.sleep(0.001)
i2c.mem_write(100, 0x34, 0x1C)
i2c.mem_write(100, 0x34, 0x1D)
i2c.mem_write(100, 0x34, 0x1E)
time.sleep(0.001)
i2c.mem_write(dataPage0[:], 0x34, 0x4F) 
i2c.mem_write(dataPage1[:], 0x34, 0x4F)
i2c.mem_write(0x20, 0x34, 0x01) #run engine 1
i2c.mem_write(0x60, 0x34, 0x00) #free run engine 1